#docker-compose.yml
#- nginx:1.10-alpine
#- mysql:5.7
#- redis:3.2
#- web from Dockerfile of web (build is required)
version: '2'
services:
  # MySQL
  mysqld:
    #env_file: .env
    image: mysql:5.7
    container_name: mysqld
    ports:
      - "3306:3306"
    volumes:
      - /Users/hy/work/docker-env/projects/mysql/conf:/etc/mysql/conf.d
      - /Users/hy/work/docker-env/projects/golang/web/db_data:/var/lib/mysql
      - /Users/hy/work/docker-env/projects/mysql/init.d:/docker-entrypoint-initdb.d
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: hiromaily
      MYSQL_USER: hiromaily
      MYSQL_PASSWORD: 12345678
  # Redis
  redisd:
    image: redis:3.2
    container_name: redisd
    ports:
      - "6379:6379"
    volumes:
      - /Users/hy/work/docker-env/projects/golang/web/redis_data:/data
    restart: always
    command: redis-server --requirepass password --appendonly yes
  # golang:go-gin-wrapper
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        redisHostName: redis-server
        mysqlHostName: mysql-server
    image: go-gin-wrapper:v1.0
    container_name: web
    ports:
      - "9999:9999"
    expose:
      - "9999"
    volumes:
      - /Users/hy/work/docker-env/projects/golang/web/logs:/var/log/goweb
    links:
      - mysqld:mysql-server
      - redisd:redis-server
      #- nginxs:proxy-server
    depends_on:
      - mysqld
      - redisd
    stdin_open: true
    tty: true
    restart: always
    command: bash
  # Nginx
  nginxs:
    build:
      context: /Users/hy/work/docker-env/projects/nginx/docker_build/
    image: nginxs:v1.0
    container_name: nginxs
    ports:
      - "8080:80"
    links:
      - web:go-server
    depends_on:
      - web
    restart: always
